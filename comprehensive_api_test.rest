# ===================================================================
# PET CARE SERVICE BACKEND - COMPREHENSIVE API TEST FILE
# ===================================================================
# This file contains tests for ALL endpoints in the Pet Care Service Backend
# Base URL: https://localhost:8443/api
# ===================================================================

@baseUrl = https://localhost:8443/api
@petOwnerToken = 
@serviceProviderToken = 
@managerToken = 
@petId = 
@serviceId = 
@bookingId = 
@dietId = 
@activityId = 
@scheduleId = 
@sessionId = 

# ===================================================================
# AUTHENTICATION ENDPOINTS
# ===================================================================

### 1. Health Check
GET {{baseUrl}}/../health

### 2. Start Registration - Pet Owner
POST {{baseUrl}}/auth/start-verification
Content-Type: application/json

{
    "username": "John Doe",
    "email": "john.petowner@example.com",
    "password": "SecurePass123!",
    "gender": "Male",
    "role": "Pet owner",
    "phone": "0901234567",
    "city": "Ho Chi Minh City",
    "address": "123 Nguyen Hue Street"
}

### 3. Start Registration - Service Provider
POST {{baseUrl}}/auth/start-verification
Content-Type: application/json

{
    "username": "Pet Grooming Service",
    "email": "service.provider@example.com",
    "password": "SecurePass123!",
    "gender": "Other",
    "role": "Service provider",
    "phone": "0907654321",
    "bussiness_name": "Premium Pet Care",
    "description": "Professional pet grooming and care services",
    "address": "456 Le Loi Boulevard",
    "website": "https://premiumpetcare.com"
}

### 4. Email Verification Step
POST {{baseUrl}}/auth/verify-email
Content-Type: application/json

{
    "sessionId": "{{sessionId}}",
    "emailCode": "123456"
}

### 5. Complete Registration
POST {{baseUrl}}/auth/complete-registration
Content-Type: application/json

{
    "sessionId": "{{sessionId}}"
}

### 6. Login - Pet Owner
POST {{baseUrl}}/auth/login
Content-Type: application/json

{
    "email": "john.petowner@example.com",
    "password": "SecurePass123!"
}

### 7. Login - Service Provider
POST {{baseUrl}}/auth/login
Content-Type: application/json

{
    "email": "service.provider@example.com",
    "password": "SecurePass123!"
}

### 8. Login - Manager
POST {{baseUrl}}/auth/login
Content-Type: application/json

{
    "email": "manager@petcare.com",
    "password": "AdminPass123!"
}

### 9. Forgot Password Request
POST {{baseUrl}}/auth/forgot-password
Content-Type: application/json

{
    "email": "john.petowner@example.com"
}

### 10. Reset Password
POST {{baseUrl}}/auth/reset-password
Content-Type: application/json

{
    "email": "john.petowner@example.com",
    "code": "123456",
    "newPassword": "NewSecurePass123!"
}

### 11. Get Current User
GET {{baseUrl}}/auth/me
Authorization: Bearer {{petOwnerToken}}

### 12. Logout
POST {{baseUrl}}/auth/logout
Authorization: Bearer {{petOwnerToken}}

### 13. Resend Verification Codes
POST {{baseUrl}}/auth/resend-verification-codes
Content-Type: application/json

{
    "sessionId": "{{sessionId}}"
}

### 14. Resend Password Reset
POST {{baseUrl}}/auth/resend-password-reset
Content-Type: application/json

{
    "email": "john.petowner@example.com"
}

### 15. Check Verification Status
POST {{baseUrl}}/auth/check-verification-status
Content-Type: application/json

{
    "sessionId": "{{sessionId}}"
}

### 16. Cancel Registration
POST {{baseUrl}}/auth/cancel-registration
Content-Type: application/json

{
    "sessionId": "{{sessionId}}"
}

### 17. Restart Verification
POST {{baseUrl}}/auth/restart-verification
Content-Type: application/json

{
    "username": "john.petowner@example.com",
    "password": "SecurePass123!"
}

# ===================================================================
# ADMIN/MANAGER ENDPOINTS
# ===================================================================

### 18. Get Incomplete Registrations (Manager)
GET {{baseUrl}}/auth/admin/incomplete-registrations
Authorization: Bearer {{managerToken}}

### 19. Force Complete Verification (Manager)
POST {{baseUrl}}/auth/admin/force-complete-verification
Authorization: Bearer {{managerToken}}
Content-Type: application/json

{
    "userId": 1
}

### 20. Clean Blacklist (Manager)
POST {{baseUrl}}/auth/admin/cleanup-blacklist
Authorization: Bearer {{managerToken}}

### 21. Get Blacklist Stats (Manager)
GET {{baseUrl}}/auth/admin/blacklist-stats
Authorization: Bearer {{managerToken}}

# ===================================================================
# PROFILE ENDPOINTS
# ===================================================================

### 22. Get Profile
GET {{baseUrl}}/profile
Authorization: Bearer {{petOwnerToken}}

### 23. Update Profile - Pet Owner
PUT {{baseUrl}}/profile
Authorization: Bearer {{petOwnerToken}}
Content-Type: application/json

{
    "name": "John Updated Doe",
    "gender": "Male",
    "phone": "0901234999",
    "city": "Ho Chi Minh City",
    "address": "Updated Address"
}

### 24. Update Profile - Service Provider
PUT {{baseUrl}}/profile
Authorization: Bearer {{serviceProviderToken}}
Content-Type: application/json

{
    "name": "Updated Pet Grooming Service",
    "bussiness_name": "Premium Pet Care Updated",
    "description": "Updated professional pet grooming services",
    "phone": "0907654999",
    "address": "Updated Address",
    "website": "https://updated-premiumpetcare.com"
}

### 25. Delete Account
DELETE {{baseUrl}}/profile
Authorization: Bearer {{petOwnerToken}}

# ===================================================================
# PETS ENDPOINTS
# ===================================================================

### 26. Get All Pets
GET {{baseUrl}}/pets
Authorization: Bearer {{petOwnerToken}}

### 27. Add New Pet
POST {{baseUrl}}/pets
Authorization: Bearer {{petOwnerToken}}
Content-Type: application/json

{
    "name": "Buddy",
    "breed": "Golden Retriever",
    "description": "Friendly and energetic dog",
    "age": 3,
    "dob": "2021-01-15",
    "picture": "base64encodedimage"
}

### 28. Get Pet by ID
GET {{baseUrl}}/pets/{{petId}}
Authorization: Bearer {{petOwnerToken}}

### 29. Update Pet
PUT {{baseUrl}}/pets/{{petId}}
Authorization: Bearer {{petOwnerToken}}
Content-Type: application/json

{
    "name": "Buddy Updated",
    "breed": "Golden Retriever",
    "description": "Updated friendly and energetic dog",
    "age": 4
}

### 30. Delete Pet
DELETE {{baseUrl}}/pets/{{petId}}
Authorization: Bearer {{petOwnerToken}}

# ===================================================================
# DIET ENDPOINTS
# ===================================================================

### 31. Get All Diets
GET {{baseUrl}}/diet
Authorization: Bearer {{petOwnerToken}}

### 32. Get Diets for Specific Pet
GET {{baseUrl}}/diet/pet/{{petId}}
Authorization: Bearer {{petOwnerToken}}

### 33. Add Diet to Pet
POST {{baseUrl}}/diet/pet/{{petId}}
Authorization: Bearer {{petOwnerToken}}
Content-Type: application/json

{
    "name": "Morning Kibble",
    "amount": "2 cups",
    "description": "High-quality dry food for breakfast"
}

### 34. Get Diet by ID
GET {{baseUrl}}/diet/{{dietId}}
Authorization: Bearer {{petOwnerToken}}

### 35. Update Diet
PUT {{baseUrl}}/diet/{{dietId}}
Authorization: Bearer {{petOwnerToken}}
Content-Type: application/json

{
    "name": "Updated Morning Kibble",
    "amount": "2.5 cups",
    "description": "Updated high-quality dry food"
}

### 36. Delete Diet
DELETE {{baseUrl}}/diet/{{dietId}}
Authorization: Bearer {{petOwnerToken}}

# ===================================================================
# ACTIVITY ENDPOINTS
# ===================================================================

### 37. Get All Activities
GET {{baseUrl}}/activity
Authorization: Bearer {{petOwnerToken}}

### 38. Get Activities for Specific Pet
GET {{baseUrl}}/activity/pet/{{petId}}
Authorization: Bearer {{petOwnerToken}}

### 39. Add Activity to Pet
POST {{baseUrl}}/activity/pet/{{petId}}
Authorization: Bearer {{petOwnerToken}}
Content-Type: application/json

{
    "name": "Morning Walk",
    "description": "30-minute walk in the park"
}

### 40. Get Activity by ID
GET {{baseUrl}}/activity/{{activityId}}
Authorization: Bearer {{petOwnerToken}}

### 41. Update Activity
PUT {{baseUrl}}/activity/{{activityId}}
Authorization: Bearer {{petOwnerToken}}
Content-Type: application/json

{
    "name": "Updated Morning Walk",
    "description": "45-minute walk in the park"
}

### 42. Delete Activity
DELETE {{baseUrl}}/activity/{{activityId}}
Authorization: Bearer {{petOwnerToken}}

# ===================================================================
# PET SCHEDULE ENDPOINTS
# ===================================================================

### 43. Get All Pet Schedules
GET {{baseUrl}}/pet-schedule
Authorization: Bearer {{petOwnerToken}}

### 44. Get Schedules for Specific Pet
GET {{baseUrl}}/pet-schedule/pet/{{petId}}
Authorization: Bearer {{petOwnerToken}}

### 45. Create Pet Schedule
POST {{baseUrl}}/pet-schedule
Authorization: Bearer {{petOwnerToken}}
Content-Type: application/json

{
    "startdate": "2024-12-15",
    "repeat_option": "daily",
    "hour": 8,
    "minute": 0,
    "dietid": "{{dietId}}"
}

### 46. Get Schedule by ID
GET {{baseUrl}}/pet-schedule/{{scheduleId}}
Authorization: Bearer {{petOwnerToken}}

### 47. Update Schedule
PUT {{baseUrl}}/pet-schedule/{{scheduleId}}
Authorization: Bearer {{petOwnerToken}}
Content-Type: application/json

{
    "startdate": "2024-12-16",
    "repeat_option": "weekly",
    "hour": 9,
    "minute": 30
}

### 48. Delete Schedule
DELETE {{baseUrl}}/pet-schedule/{{scheduleId}}
Authorization: Bearer {{petOwnerToken}}

# ===================================================================
# SCHEDULE DASHBOARD ENDPOINTS
# ===================================================================

### 49. Get Pet Owner Schedule Dashboard
GET {{baseUrl}}/schedule/dashboard
Authorization: Bearer {{petOwnerToken}}

### 50. Get Pet Owner Schedule Dashboard with Filters
GET {{baseUrl}}/schedule/dashboard?startDate=2024-12-01&endDate=2024-12-31&status=confirmed
Authorization: Bearer {{petOwnerToken}}

### 51. Get Service Provider Schedule Dashboard
GET {{baseUrl}}/schedule/provider/dashboard
Authorization: Bearer {{serviceProviderToken}}

### 52. Get Service Provider Dashboard with Filters
GET {{baseUrl}}/schedule/provider/dashboard?startDate=2024-12-01&endDate=2024-12-31&status=confirmed
Authorization: Bearer {{serviceProviderToken}}

### 53. Create Schedule Entry
POST {{baseUrl}}/schedule/create
Authorization: Bearer {{petOwnerToken}}
Content-Type: application/json

{
    "scheduled_time": "2024-12-15T10:30:00Z",
    "title": "Vet Appointment",
    "detail": "Annual checkup for Buddy"
}

### 54. Get Schedule Entries
GET {{baseUrl}}/schedule/entries
Authorization: Bearer {{petOwnerToken}}

### 55. Get Schedule Entries with Filters
GET {{baseUrl}}/schedule/entries?startDate=2024-12-01&endDate=2024-12-31
Authorization: Bearer {{petOwnerToken}}

### 56. Update Schedule Entry
PUT {{baseUrl}}/schedule/entries/{{scheduleId}}
Authorization: Bearer {{petOwnerToken}}
Content-Type: application/json

{
    "scheduled_time": "2024-12-15T11:00:00Z",
    "title": "Updated Vet Appointment",
    "detail": "Updated annual checkup for Buddy"
}

### 57. Delete Schedule Entry
DELETE {{baseUrl}}/schedule/entries/{{scheduleId}}
Authorization: Bearer {{petOwnerToken}}

# ===================================================================
# SERVICES ENDPOINTS
# ===================================================================

### 58. Get Service Types
GET {{baseUrl}}/services/types

### 59. Get All Services (Public)
GET {{baseUrl}}/services

### 60. Get Services with Filters
GET {{baseUrl}}/services?types=1,2&minPrice=100&maxPrice=500&search=grooming&status=approved

### 61. Get Service by ID
GET {{baseUrl}}/services/{{serviceId}}

### 62. Get Service Details with Timeslots
GET {{baseUrl}}/services/{{serviceId}}/details

### 63. Submit New Service (Service Provider)
POST {{baseUrl}}/services
Authorization: Bearer {{serviceProviderToken}}
Content-Type: application/json

{
    "name": "Premium Pet Grooming",
    "price": 150000,
    "description": "Full grooming service including bath, nail trim, and styling",
    "duration": "2 hours",
    "typeid": 1,
    "timeSlots": ["09:00", "11:00", "14:00", "16:00"]
}

### 64. Get My Services (Service Provider)
GET {{baseUrl}}/services/my-services
Authorization: Bearer {{serviceProviderToken}}

### 65. Get My Services with Status Filter
GET {{baseUrl}}/services/my-services?status=pending
Authorization: Bearer {{serviceProviderToken}}

### 66. Update Service (Service Provider)
PUT {{baseUrl}}/services/{{serviceId}}/update
Authorization: Bearer {{serviceProviderToken}}
Content-Type: application/json

{
    "name": "Updated Premium Pet Grooming",
    "price": 180000,
    "description": "Updated full grooming service",
    "duration": "2.5 hours",
    "typeid": 1,
    "timeSlots": ["09:00", "11:00", "13:00", "15:00", "17:00"]
}

### 67. Update Approved Service (Service Provider)
PUT {{baseUrl}}/services/{{serviceId}}/update-approved
Authorization: Bearer {{serviceProviderToken}}
Content-Type: application/json

{
    "description": "Updated description for approved service",
    "timeSlots": ["09:00", "11:00", "14:00", "16:00", "18:00"]
}

### 68. Get Services for Review (Manager)
GET {{baseUrl}}/services/pending-review
Authorization: Bearer {{managerToken}}

### 69. Get Review Summary (Manager)
GET {{baseUrl}}/services/review-summary
Authorization: Bearer {{managerToken}}

### 70. Review Service - Approve (Manager)
POST {{baseUrl}}/services/{{serviceId}}/review
Authorization: Bearer {{managerToken}}
Content-Type: application/json

{
    "action": "approve"
}

### 71. Review Service - Reject (Manager)
POST {{baseUrl}}/services/{{serviceId}}/review
Authorization: Bearer {{managerToken}}
Content-Type: application/json

{
    "action": "reject",
    "rejectionReason": "Service description needs more detail"
}

# ===================================================================
# BOOKING ENDPOINTS - PET OWNER
# ===================================================================

### 72. Get All Bookings (Pet Owner)
GET {{baseUrl}}/bookings
Authorization: Bearer {{petOwnerToken}}

### 73. Get Booking by ID (Pet Owner)
GET {{baseUrl}}/bookings/{{bookingId}}
Authorization: Bearer {{petOwnerToken}}

### 74. Create New Booking
POST {{baseUrl}}/bookings
Authorization: Bearer {{petOwnerToken}}
Content-Type: application/json

{
    "serviceid": "{{serviceId}}",
    "slot": "09:00",
    "servedate": "2024-12-20",
    "payment_method": "cash",
    "petIds": ["{{petId}}"]
}

### 75. Update Booking
PUT {{baseUrl}}/bookings/{{bookingId}}
Authorization: Bearer {{petOwnerToken}}
Content-Type: application/json

{
    "servedate": "2024-12-21",
    "payment_method": "card"
}

### 76. Cancel Booking
DELETE {{baseUrl}}/bookings/{{bookingId}}
Authorization: Bearer {{petOwnerToken}}

# ===================================================================
# BOOKING ENDPOINTS - SERVICE PROVIDER
# ===================================================================

### 77. Get Booking Requests (Service Provider)
GET {{baseUrl}}/bookings/provider/requests
Authorization: Bearer {{serviceProviderToken}}

### 78. Get Booking Requests with Filters
GET {{baseUrl}}/bookings/provider/requests?status=pending&startDate=2024-12-01&endDate=2024-12-31
Authorization: Bearer {{serviceProviderToken}}

### 79. Get Booking Request Details
GET {{baseUrl}}/bookings/provider/requests/{{bookingId}}
Authorization: Bearer {{serviceProviderToken}}

### 80. Accept Booking Request
POST {{baseUrl}}/bookings/provider/requests/{{bookingId}}/accept
Authorization: Bearer {{serviceProviderToken}}

### 81. Reject Booking Request
POST {{baseUrl}}/bookings/provider/requests/{{bookingId}}/reject
Authorization: Bearer {{serviceProviderToken}}
Content-Type: application/json

{
    "reason": "Schedule conflict with another appointment"
}

### 82. Auto-reject Expired Requests
POST {{baseUrl}}/bookings/provider/auto-reject-expired
Authorization: Bearer {{serviceProviderToken}}

### 83. Check Service Availability
GET {{baseUrl}}/bookings/provider/availability/{{serviceId}}/2024-12-20
Authorization: Bearer {{serviceProviderToken}}

# ===================================================================
# REVIEWS ENDPOINTS
# ===================================================================

### 84. Get My Reviews (Pet Owner)
GET {{baseUrl}}/reviews/my-reviews
Authorization: Bearer {{petOwnerToken}}

### 85. Get Service Reviews (Public)
GET {{baseUrl}}/reviews/service/{{serviceId}}

### 86. Get Provider Reviews (Public)
GET {{baseUrl}}/reviews/provider/1

### 87. Create Review
POST {{baseUrl}}/reviews/booking/{{bookingId}}
Authorization: Bearer {{petOwnerToken}}
Content-Type: application/json

{
    "stars": 5,
    "comment": "Excellent service! My pet looked amazing after grooming."
}

### 88. Get Review by Booking ID
GET {{baseUrl}}/reviews/booking/{{bookingId}}
Authorization: Bearer {{petOwnerToken}}

### 89. Update Review
PUT {{baseUrl}}/reviews/booking/{{bookingId}}
Authorization: Bearer {{petOwnerToken}}
Content-Type: application/json

{
    "stars": 4,
    "comment": "Updated: Good service, but could be faster."
}

### 90. Delete Review
DELETE {{baseUrl}}/reviews/booking/{{bookingId}}
Authorization: Bearer {{petOwnerToken}}

# ===================================================================
# REPORTS ENDPOINTS
# ===================================================================

### 91. Get My Reports (Pet Owner)
GET {{baseUrl}}/reports/my-reports
Authorization: Bearer {{petOwnerToken}}

### 92. Get Provider Reports (Service Provider)
GET {{baseUrl}}/reports/provider/1
Authorization: Bearer {{serviceProviderToken}}

### 93. Create Report
POST {{baseUrl}}/reports/booking/{{bookingId}}
Authorization: Bearer {{petOwnerToken}}
Content-Type: application/json

{
    "text": "Service completed successfully. Pet was well taken care of.",
    "image": "base64encodedimage"
}

### 94. Get Report by Booking ID
GET {{baseUrl}}/reports/booking/{{bookingId}}
Authorization: Bearer {{petOwnerToken}}

### 95. Update Report
PUT {{baseUrl}}/reports/booking/{{bookingId}}
Authorization: Bearer {{petOwnerToken}}
Content-Type: application/json

{
    "text": "Updated: Service was excellent, pet looks great!",
    "image": "updatedbase64encodedimage"
}

### 96. Delete Report
DELETE {{baseUrl}}/reports/booking/{{bookingId}}
Authorization: Bearer {{petOwnerToken}}

### 97. Get Reports Summary (Manager)
GET {{baseUrl}}/reports/admin/summary
Authorization: Bearer {{managerToken}}

# ===================================================================
# LEGACY ENDPOINTS (For Backward Compatibility)
# ===================================================================

### 98. Legacy Registration (Deprecated)
POST {{baseUrl}}/auth/register
Content-Type: application/json

{
    "username": "Legacy User",
    "email": "legacy@example.com", 
    "password": "LegacyPass123!",
    "gender": "Male",
    "role": "Pet owner",
    "phone": "0901111111",
    "city": "Ho Chi Minh City",
    "address": "Legacy Address"
}

# ===================================================================
# ERROR TESTING ENDPOINTS
# ===================================================================

### 99. Test 404 - Non-existent Endpoint
GET {{baseUrl}}/non-existent-endpoint
Authorization: Bearer {{petOwnerToken}}

### 100. Test 401 - Unauthorized Access
GET {{baseUrl}}/profile

### 101. Test 403 - Wrong Role Access
GET {{baseUrl}}/services/pending-review
Authorization: Bearer {{petOwnerToken}}

### 102. Test 400 - Invalid Data
POST {{baseUrl}}/pets
Authorization: Bearer {{petOwnerToken}}
Content-Type: application/json

{
    "name": "",
    "breed": "",
    "age": -1
}

### 103. Test Rate Limiting
POST {{baseUrl}}/auth/login
Content-Type: application/json

{
    "email": "test@example.com",
    "password": "wrongpassword"
}

# ===================================================================
# BATCH OPERATIONS (If Available)
# ===================================================================

### 104. Create Multiple Pets (If Supported)
POST {{baseUrl}}/pets/batch
Authorization: Bearer {{petOwnerToken}}
Content-Type: application/json

{
    "pets": [
        {
            "name": "Max",
            "breed": "German Shepherd", 
            "age": 2,
            "picture": "base64encodedimage1"
        },
        {
            "name": "Luna",
            "breed": "Persian Cat",
            "age": 1,
            "picture": "base64encodedimage2"
        }
    ]
}

# ===================================================================
# ADVANCED SEARCH AND FILTERING
# ===================================================================

### 105. Advanced Service Search
GET {{baseUrl}}/services?types=1,2,3&minPrice=50&maxPrice=300&search=grooming&location=HCM&rating=4&sortBy=price&sortOrder=asc&page=1&limit=10

### 106. Advanced Booking Search (Pet Owner)
GET {{baseUrl}}/bookings?status=confirmed&startDate=2024-01-01&endDate=2024-12-31&serviceType=1&sortBy=date&sortOrder=desc

### 107. Advanced Report Search (Manager)
GET {{baseUrl}}/reports/admin/summary?startDate=2024-01-01&endDate=2024-12-31&providerId=1&serviceType=1

# ===================================================================
# STATISTICS AND ANALYTICS
# ===================================================================

### 108. Get Dashboard Statistics (Pet Owner)
GET {{baseUrl}}/stats/dashboard
Authorization: Bearer {{petOwnerToken}}

### 109. Get Provider Analytics (Service Provider)
GET {{baseUrl}}/stats/provider
Authorization: Bearer {{serviceProviderToken}}

### 110. Get System Analytics (Manager)
GET {{baseUrl}}/stats/admin
Authorization: Bearer {{managerToken}}

# ===================================================================
# NOTIFICATION ENDPOINTS (If Available)
# ===================================================================

### 111. Get Notifications
GET {{baseUrl}}/notifications
Authorization: Bearer {{petOwnerToken}}

### 112. Mark Notification as Read
PUT {{baseUrl}}/notifications/1/read
Authorization: Bearer {{petOwnerToken}}

### 113. Delete Notification
DELETE {{baseUrl}}/notifications/1
Authorization: Bearer {{petOwnerToken}}

# ===================================================================
# FILE UPLOAD ENDPOINTS (If Available)
# ===================================================================

### 114. Upload Pet Picture
POST {{baseUrl}}/upload/pet-picture
Authorization: Bearer {{petOwnerToken}}
Content-Type: multipart/form-data

### 115. Upload Service License
POST {{baseUrl}}/upload/service-license
Authorization: Bearer {{serviceProviderToken}}
Content-Type: multipart/form-data

# ===================================================================
# WEBSOCKET ENDPOINTS (If Available)
# ===================================================================

### 116. Connect to Real-time Updates
# WebSocket connection: wss://localhost:8443/api/ws
# Authorization: Bearer {{petOwnerToken}}

# ===================================================================
# END OF COMPREHENSIVE API TEST FILE
# ===================================================================

### Notes:
# 1. Replace variable placeholders ({{petOwnerToken}}, {{serviceId}}, etc.) with actual values
# 2. Some endpoints may require specific setup or data to exist before testing
# 3. WebSocket and file upload endpoints may need special client setup
# 4. Rate limiting may affect rapid testing - add delays if needed
# 5. All HTTPS requests use self-signed certificates - accept security warnings
# 6. Test endpoints in logical order (auth first, then create resources, then test operations)
